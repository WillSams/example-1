name: Build and Push to ECR
on:
  push:
    branches:
      - main
jobs:
  login-build-and-push-to-ecr:
    runs-on: ubuntu-20.04
    steps:
      - id: configure-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - id: login-to-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - id: checkout
        uses: actions/checkout@v2
      - id: build-and-push-to-ecr
        run: |
          docker build -t example-1:latest .
          docker tag example-1:latest ${{ secrets.REPOSITORY_PATH }}/example-1:latest
          docker push ${{ secrets.REPOSITORY_PATH }}/example-1:latest
        env:
          ECR_REGISTRY: ${{ steps.login-to-ecr.outputs.registry }}
      - id: download-argo-cd-cli
        uses: clowdhaus/argo-cd-action/@main
        env:
          # Only required for first step in job where API is called
          # All subsequent setps in a job will not re-download the CLI
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          command: version
          options: --client
      - id: login-to-argo-cd
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: login 
          options: --username ${{ secrets.ARGO_USERNAME }} --password ${{ secrets.ARGO_PASSWORD }} --insecure ${{ secrets.ARGO_SERVER }} --namespace argo-cd
      - id: trigger-restart-of-deployment
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app actions run example-1 restart 
          options: --kind Deployment --namespace argo-cd
      - id: trigger-sync
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app sync example-1
          options: --namespace argo-cd
